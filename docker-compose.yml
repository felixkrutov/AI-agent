version: '3.8'

services:
  nginx:
    container_name: engineering-hub-nginx
    build: ./nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  frontend:
    container_name: engineering-hub-frontend
    build: ./frontend
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  backend:
    container_name: engineering-hub-backend
    build: ./backend
    restart: unless-stopped
    env_file: .env
    # --- НАЧАЛО ИЗМЕНЕНИЙ ---
    environment:
      # Заставляем все HTTP/HTTPS запросы идти через наш прокси
      HTTPS_PROXY: "socks5h://host.docker.internal:9090"
      HTTP_PROXY: "socks5h://host.docker.internal:9090"
    # --- КОНЕЦ ИЗМЕНЕНИЙ ---
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./backend:/app
      - ./config.json:/app_config/config.json
      - ./chat_histories:/app/chat_histories
      # - ./proxychains.conf:/etc/proxychains.conf:ro # Эта строка больше не нужна

  db:
    container_name: engineering-hub-db
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: engineering-hub-redis
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning

  worker:
    container_name: engineering-hub-worker
    build: ./worker
    restart: unless-stopped
    env_file: .env
    # --- НАЧАЛО ИЗМЕНЕНИЙ ---
    environment:
      # То же самое для воркера
      HTTPS_PROXY: "socks5h://host.docker.internal:9090"
      HTTP_PROXY: "socks5h://host.docker.internal:9090"
    # --- КОНЕЦ ИЗМЕНЕНИЙ ---
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./worker:/app
      - ./backend/kb_service:/app/kb_service
      - ./config.json:/app_config/config.json
      - ./chat_histories:/app/chat_histories
      # - ./proxychains.conf:/etc/proxychains.conf:ro # И эта строка больше не нужна

volumes:
  postgres_data:
    name: engineering-hub_postgres_data
